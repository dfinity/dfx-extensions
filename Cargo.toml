[workspace]
members = ["extensions/sns", "extensions/nns", "extensions-utils"]
resolver = "2"

[workspace.package]
authors = ["DFINITY Team"]
publish = false
edition = "2021"
license = "Apache-2.0"
repository = "https://github.com/dfinity/dfx-extensions"

[workspace.dependencies]
dfx-core = { git = "https://github.com/dfinity/sdk", rev = "d8c1ede88d1978653d2e7d7005095fe38499e023" }
dfx-extensions-utils.path = "./extensions-utils"

anyhow = "^1"
candid = "0.10"
clap = { version = "4.2.1", features = ["derive", "env"] }
flate2 = { version = "1.0.25", default-features = false, features = [
    "zlib-ng",
] }
fn-error-context = "0.2.1"
futures-util = "0.3.28"
ic-agent = { git = "https://github.com/dfinity/agent-rs", rev = "be929fd7967249c879f48f2f494cbfc5805a7d98" }
ic-utils = { git = "https://github.com/dfinity/agent-rs", rev = "be929fd7967249c879f48f2f494cbfc5805a7d98" }
reqwest = { version = "^0.11.22", default-features = false, features = [
    "blocking",
    "json",
    "rustls-tls",
    "native-tls-vendored",
] }
serde = "^1.0"
slog = "^2.7.0"
tempfile = "3.5.0"
tokio = { version = "^1.36.0", features = ["rt-multi-thread"] }
url = "^2.4.1"
ic-icp-index = { git = "https://github.com/dfinity/ic", rev = "506bbfdc1e6e3e6a54a27cfe878b315983429104" }
ic-icrc1-index-ng = { git = "https://github.com/dfinity/ic", rev = "506bbfdc1e6e3e6a54a27cfe878b315983429104" }
ic-icrc1-ledger = { git = "https://github.com/dfinity/ic", rev = "506bbfdc1e6e3e6a54a27cfe878b315983429104" }
ic-sns-cli = { git = "https://github.com/dfinity/ic", rev = "506bbfdc1e6e3e6a54a27cfe878b315983429104" }
serde_json = "1.0.79"

# Config for 'cargo dist'
[workspace.metadata.dist]
# CI backends to support
ci = ["github"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "x86_64-unknown-linux-gnu",
]
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Checksums to generate for each App
checksum = "sha256"
# Whether to consider the binaries in a package for distribution (defaults true)
dist = true
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.10.0"
# The installers to generate for each app
installers = []
# Publish jobs to run in CI
pr-run-mode = "skip"


# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
