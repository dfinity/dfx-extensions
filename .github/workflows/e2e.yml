name: Run e2e tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-extension:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-14, ubuntu-22.04 ]
        extension: [ nns, sns ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-e2e-${{ matrix.extension }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-e2e-${{ matrix.extension }}-
            ${{ runner.os }}-cargo-e2e-
      - name: Install brew
        uses: Homebrew/actions/setup-homebrew@master
        if: contains(matrix.os, 'macos-14') == false
      - name: Install homebrew packages
        run: brew install coreutils sponge protobuf lmdb
      - name: Install apt packages
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libunwind-dev
      - name: Install dist
        # copied from dist generated release.yml
        # should be updated when dist version is updated
        shell: bash
        run: "curl --proto '=https' --tlsv1.2 -LsSf https://github.com/axodotdev/cargo-dist/releases/download/v0.30.0/cargo-dist-installer.sh | sh"
      - name: Install IC SDK (dfx)
        uses: dfinity/setup-dfx@main
        with:
          dfx-version: "0.29.0"
      - name: Set prebuilt extensions directory
        run: echo "PREBUILT_EXTENSIONS_DIR=$HOME/prebuilt-extensions" >> $GITHUB_ENV
      - name: Build extension manually
        run: .github/workflows/build-extension-manually.sh ${{ matrix.extension }}
      - name: Build nns manually
        run: .github/workflows/build-extension-manually.sh nns
        if: matrix.extension == 'sns'
      - name: run test
        run: timeout 2400 e2e/bats/bin/bats extensions/${{ matrix.extension }}/e2e/tests/*.bash

  aggregate:
    name: e2e:required
    if: ${{ always() }}
    needs: [test-extension]
    runs-on: ubuntu-latest
    steps:
      - name: check e2e test result
        if: ${{ needs.test-extension.result != 'success' }}
        run: exit 1
